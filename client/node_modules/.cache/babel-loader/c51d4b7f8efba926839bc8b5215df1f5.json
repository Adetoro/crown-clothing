{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\torok\\\\Desktop\\\\crown-clothing\\\\client\\\\src\\\\components\\\\error-boundary\\\\error-boundary.component.jsx\";\nimport React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasErrored: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      hasErrored: true\n    };\n  }\n\n  componentDidCatch(error, info) {\n    console.log(error);\n  }\n\n  render() {\n    if (this.state.hasErrored) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Something went wrong \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 20\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["C:/Users/torok/Desktop/crown-clothing/client/src/components/error-boundary/error-boundary.component.jsx"],"names":["React","ErrorBoundary","Component","constructor","state","hasErrored","getDerivedStateFromError","error","componentDidCatch","info","console","log","render","props","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,GAAE;AACT;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AAED,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuC;AACnC,WAAO;AAAEF,MAAAA,UAAU,EAAE;AAAd,KAAP;AACH;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,IAAR,EAAc;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKR,KAAL,CAAWC,UAAd,EAA0B;AACtB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,WAAO,KAAKQ,KAAL,CAAWC,QAAlB;AACH;;AAvBuC;;AA0B5C,eAAeb,aAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n            hasErrored: false\r\n        };\r\n    }    \r\n\r\n    static getDerivedStateFromError(error) {\r\n        return { hasErrored: true };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        console.log(error);\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasErrored) {\r\n            return <div> Something went wrong </div>;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;"]},"metadata":{},"sourceType":"module"}