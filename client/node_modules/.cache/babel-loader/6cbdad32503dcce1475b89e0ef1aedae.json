{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\torok\\\\Desktop\\\\crown-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverviewContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/torok/Desktop/crown-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStartAsync","selectIsCollectionsLoaded","ShopPage","Component","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","createStructuredSelector","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,yBAAT,QAA0C,iCAA1C;;AAGA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AAGnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEJ,MAAAA;AAAF,QAAgC,KAAKK,KAA3C;AACAL,IAAAA,0BAA0B;AAC7B;;AAEDM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAgC,KAAKH,KAA3C;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,KAAK,MADT;AAEI,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFxB;AAGI,QAAA,SAAS,EAAEX;AAHf;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,KAAD;AACI,QAAA,IAAI,EAAG,GAAES,KAAK,CAACE,IAAK;AADxB;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAxBkC;;AA2BvC,MAAMC,eAAe,GAAGC,wBAAwB,CAAC;AAC7CH,EAAAA,mBAAmB,EAAEP;AADwB,CAAD,CAAhD;;AAIA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACrCb,EAAAA,0BAA0B,EAAE,MAAMa,QAAQ,CAACb,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAIA,eAAeH,OAAO,CAACa,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPageContainer from '../collection/collection.container';\r\n\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\r\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n    \r\n\r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } =this.props;\r\n        fetchCollectionsStartAsync();\r\n    }\r\n\r\n    render() {\r\n        const { match, isCollectionsLoaded} = this.props;\r\n        return(\r\n            <div className='shop-page'>\r\n                <Route \r\n                    exact \r\n                    path={`${match.path}`}\r\n                    component={CollectionsOverviewContainer} \r\n                   \r\n                />\r\n                <Route \r\n                    path={`${match.path}/:collectionId`}\r\n                    \r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}  \r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionsLoaded: selectIsCollectionsLoaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}